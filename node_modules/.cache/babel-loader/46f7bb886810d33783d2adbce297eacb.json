{"ast":null,"code":"import getType from './get-type';\n/**\n * Deeply compares two objects and returns a boolean that specifies whether the two\n * objects are equal\n * @param   {Object | Array} objA       First object.\n * @param   {Object | Array} objB       Second object.\n * @param   {Function}       comparator A custom function to compare values.\n * @return  {Boolean}             Result is true if the two objects are equal.\n */\n\nvar deepCompare = function deepCompare(objA, objB, comparator) {\n  var typeA = getType(objA);\n  var typeB = getType(objB);\n  if (typeA !== typeB) return false;\n  if (typeA === 'object' || typeA === 'array') {\n    var keys = Object.keys(objA);\n    for (var i = 0; i < keys.length; i += 1) {\n      var valueA = objA[keys[i]];\n      var valueB = objB[keys[i]];\n      if (!(comparator != null ? comparator : deepCompare)(valueA, valueB)) {\n        return false;\n      }\n    }\n  }\n  return (objA == null ? void 0 : objA.toString()) === (objB == null ? void 0 : objB.toString());\n};\nexport default deepCompare;","map":{"version":3,"names":["getType","deepCompare","objA","objB","comparator","typeA","typeB","keys","Object","i","length","valueA","valueB","toString"],"sources":["/Users/lohith/Downloads/snarling_hidden_goose-react 2/node_modules/noyb/es/deep-compare.js"],"sourcesContent":["import getType from './get-type';\n/**\n * Deeply compares two objects and returns a boolean that specifies whether the two\n * objects are equal\n * @param   {Object | Array} objA       First object.\n * @param   {Object | Array} objB       Second object.\n * @param   {Function}       comparator A custom function to compare values.\n * @return  {Boolean}             Result is true if the two objects are equal.\n */\n\nvar deepCompare = function deepCompare(objA, objB, comparator) {\n  var typeA = getType(objA);\n  var typeB = getType(objB);\n  if (typeA !== typeB) return false;\n\n  if (typeA === 'object' || typeA === 'array') {\n    var keys = Object.keys(objA);\n\n    for (var i = 0; i < keys.length; i += 1) {\n      var valueA = objA[keys[i]];\n      var valueB = objB[keys[i]];\n\n      if (!(comparator != null ? comparator : deepCompare)(valueA, valueB)) {\n        return false;\n      }\n    }\n  }\n\n  return (objA == null ? void 0 : objA.toString()) === (objB == null ? void 0 : objB.toString());\n};\n\nexport default deepCompare;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,WAAW,GAAG,SAASA,WAAW,CAACC,IAAI,EAAEC,IAAI,EAAEC,UAAU,EAAE;EAC7D,IAAIC,KAAK,GAAGL,OAAO,CAACE,IAAI,CAAC;EACzB,IAAII,KAAK,GAAGN,OAAO,CAACG,IAAI,CAAC;EACzB,IAAIE,KAAK,KAAKC,KAAK,EAAE,OAAO,KAAK;EAEjC,IAAID,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,OAAO,EAAE;IAC3C,IAAIE,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACL,IAAI,CAAC;IAE5B,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACvC,IAAIE,MAAM,GAAGT,IAAI,CAACK,IAAI,CAACE,CAAC,CAAC,CAAC;MAC1B,IAAIG,MAAM,GAAGT,IAAI,CAACI,IAAI,CAACE,CAAC,CAAC,CAAC;MAE1B,IAAI,CAAC,CAACL,UAAU,IAAI,IAAI,GAAGA,UAAU,GAAGH,WAAW,EAAEU,MAAM,EAAEC,MAAM,CAAC,EAAE;QACpE,OAAO,KAAK;MACd;IACF;EACF;EAEA,OAAO,CAACV,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACW,QAAQ,EAAE,OAAOV,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACU,QAAQ,EAAE,CAAC;AAChG,CAAC;AAED,eAAeZ,WAAW"},"metadata":{},"sourceType":"module"}